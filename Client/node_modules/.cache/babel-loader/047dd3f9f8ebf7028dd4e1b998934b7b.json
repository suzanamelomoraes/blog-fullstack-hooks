{"ast":null,"code":"var _jsxFileName = \"/home/suzana/MadeRenovation/blog-fullstack-hooks/Client/src/components/Comments.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport AddComment from './AddComment';\nimport axios from 'axios';\n\nconst Comments = ({\n  postId\n}) => {\n  useEffect(() => {\n    axios.get(`http://localhost:3002/comments/${postId}`).then(res => setComments(res.data)).catch(err => {\n      console.log(err);\n    });\n  }, [postId]);\n  const [comments, setComments] = useState([]);\n  const [form, setShowForm] = useState({\n    showForm: false\n  });\n  console.log('post id', postId);\n  console.log('comments', comments);\n\n  const addComment = ({\n    comment\n  }) => {\n    const newComments = [...comments, {\n      comment,\n      postId\n    }];\n    setComments(newComments);\n    const updateFormStatus = { ...form\n    };\n    updateFormStatus.showForm = false;\n    setShowForm(updateFormStatus);\n  };\n\n  const showAddComment = () => {\n    const updateFormStatus = { ...form\n    };\n    updateFormStatus.showForm = true;\n    setShowForm(updateFormStatus);\n  };\n\n  const showComments = comments.map((eachComment, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, eachComment.comment));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: showAddComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Add comment\"), form.showForm && /*#__PURE__*/React.createElement(AddComment, {\n    addComment: addComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }), showComments);\n};\n\nexport default Comments;","map":{"version":3,"sources":["/home/suzana/MadeRenovation/blog-fullstack-hooks/Client/src/components/Comments.jsx"],"names":["React","useState","useEffect","AddComment","axios","Comments","postId","get","then","res","setComments","data","catch","err","console","log","comments","form","setShowForm","showForm","addComment","comment","newComments","updateFormStatus","showAddComment","showComments","map","eachComment","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC/BJ,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFG,GADH,CACQ,kCAAiCD,MAAO,EADhD,EAEGE,IAFH,CAESC,GAAD,IAASC,WAAW,CAACD,GAAG,CAACE,IAAL,CAF5B,EAGGC,KAHH,CAGUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KALH;AAMD,GAPQ,EAON,CAACP,MAAD,CAPM,CAAT;AASA,QAAM,CAACU,QAAD,EAAWN,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,IAAD,EAAOC,WAAP,IAAsBjB,QAAQ,CAAC;AAAEkB,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAApC;AAEAL,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,MAAvB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,QAAxB;;AAEA,QAAMI,UAAU,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiB;AAClC,UAAMC,WAAW,GAAG,CAAC,GAAGN,QAAJ,EAAc;AAAEK,MAAAA,OAAF;AAAWf,MAAAA;AAAX,KAAd,CAApB;AACAI,IAAAA,WAAW,CAACY,WAAD,CAAX;AACA,UAAMC,gBAAgB,GAAG,EAAE,GAAGN;AAAL,KAAzB;AACAM,IAAAA,gBAAgB,CAACJ,QAAjB,GAA4B,KAA5B;AACAD,IAAAA,WAAW,CAACK,gBAAD,CAAX;AACD,GAND;;AAQA,QAAMC,cAAc,GAAG,MAAM;AAC3B,UAAMD,gBAAgB,GAAG,EAAE,GAAGN;AAAL,KAAzB;AACAM,IAAAA,gBAAgB,CAACJ,QAAjB,GAA4B,IAA5B;AACAD,IAAAA,WAAW,CAACK,gBAAD,CAAX;AACD,GAJD;;AAMA,QAAME,YAAY,GAAGT,QAAQ,CAACU,GAAT,CAAa,CAACC,WAAD,EAAcC,KAAd,kBAChC;AAAG,IAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBD,WAAW,CAACN,OAA5B,CADmB,CAArB;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEGP,IAAI,CAACE,QAAL,iBAAiB,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFpB,EAIGK,YAJH,CADF;AAQD,CA1CD;;AA4CA,eAAepB,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AddComment from './AddComment';\nimport axios from 'axios';\n\nconst Comments = ({ postId }) => {\n  useEffect(() => {\n    axios\n      .get(`http://localhost:3002/comments/${postId}`)\n      .then((res) => setComments(res.data))\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [postId]);\n\n  const [comments, setComments] = useState([]);\n  const [form, setShowForm] = useState({ showForm: false });\n\n  console.log('post id', postId);\n  console.log('comments', comments);\n\n  const addComment = ({ comment }) => {\n    const newComments = [...comments, { comment, postId }];\n    setComments(newComments);\n    const updateFormStatus = { ...form };\n    updateFormStatus.showForm = false;\n    setShowForm(updateFormStatus);\n  };\n\n  const showAddComment = () => {\n    const updateFormStatus = { ...form };\n    updateFormStatus.showForm = true;\n    setShowForm(updateFormStatus);\n  };\n\n  const showComments = comments.map((eachComment, index) => (\n    <p key={index}>{eachComment.comment}</p>\n  ));\n\n  return (\n    <div>\n      <button onClick={showAddComment}>Add comment</button>\n      {form.showForm && <AddComment addComment={addComment} />}\n\n      {showComments}\n    </div>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}